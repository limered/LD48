name: "godot-ci export"
on: push
env:
  GODOT_VERSION: 4.2.2
  PROJECT_PATH: PutYourHandsDownOnTheGround
  ITCH_USERNAME: limered
  ITCH_GAME_ID: is-this-a-tiger-v2
  ITCH_PROJECT: limered/is-this-a-tiger-v2

jobs:
  export-windows:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            template: Windows
            extension: .exe
            name: is-this-a-tiger-v2-win
          - os: ubuntu-latest
            template: Linux
            extension: .x86_64
            name: is-this-a-tiger-v2-linux
    name: Export ${{ matrix.template }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ${{ env.PROJECT_PATH }}
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - uses: actions/setup-dotnet@v4
        name: Setup .NET SDK
          
      - name: Restore Dependencies
        run: |
          dotnet restore

      - name: Setup Godot
        uses: chickensoft-games/setup-godot@v2.1.1
        with:
          version: ${{ env.GODOT_VERSION }}
          use-dotnet: true
          include-templates: true

      - name: Verify Setup
        run: |
          dotnet --version
          godot --version

      - name: Generate .NET Bindings
        run: |
          godot --headless --build-solutions --quit || exit 0

      - name: Build Projects
        run: |
          dotnet build

      - name: ${{ matrix.template }} Build
        run: |
          mkdir \builds
          godot --headless --export-release "${{ matrix.template }}" "builds\${{ matrix.name }}${{ matrix.extension }}" --quit || exit 0
      
      - name: Upload to Itch
        uses: Ayowel/butler-to-itch@v1
        with:
          butler_key: ${{ secrets.BUTLER_API_KEY }}
          itch_user: ${{ env.ITCH_USERNAME }}
          itch_game: ${{ env.ITCH_GAME_ID }}
          files: |
            ${{ env.PROJECT_PATH }}/builds/${{ matrix.name }}${{ matrix.extension }}